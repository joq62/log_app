[
 {kernel, [
  {logger_level, info},
  {logger, [
    %% Console logger
    {handler, default, logger_std_h,
       #{formatter => {flatlog, #{
         map_depth => 3,
         term_depth => 50
        }}}
    },
    %% Disk logger for errors
    {handler, disk_log, logger_disk_log_h,
       #{config => #{
            file => "logs/error",
            type => wrap,
            max_no_files => 10,
            max_no_bytes => 52428800, % 10 x 5mb
         },
         level => error,
         formatter => {flatlog, #{
           map_depth => 3,
           term_depth => 50
         }}
        }
    },

    %% Synchronous Audit logs
    {handler, audit_log, logger_disk_log_h,
       #{config => #{
            file => "logs/audit",
            type => wrap,
            max_no_files => 50,
            max_no_bytes => 52428800, % 50 x 5mb
            sync_mode_qlen => 0, % handle all events synchronously
            filesync_repeat_interval => 100, % fsync after 100ms when a change is made
            %% drop overload control
            drop_mode_qlen => 100000000, % ridiculously large queue before we drop
            flush_qlen => 100000001, % ensure we pretty much never drop silently
            burst_limit_enable => false, % no burst protection
            overload_kill_enable => false % kill the whole node, not just the logger
         },
         %% only keep what you must
         filters => [
           {audit_filter, {fun my_project:audit_filter/2, state}}
         ],
         filter_default => stop,
         %% Keep structured logs to one line
         formatter => {flatlog, #{
           map_depth => 3,
           term_depth => 500 % bigger term depth
         }}
       }
    }
  ]}
 ]}
].